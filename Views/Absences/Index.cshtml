@model IEnumerable<WebClassbook.Models.Absence>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<form id="searchForm" asp-controller="Absences" asp-action="Index" method="get">
    <p>
        Student Name:  <input id ="searchBar" class="form-control-sm" type="text" name="SearchString" />
        Sort by: <select name="sortList" id="sortList" class="form-control-sm">
            <option value="All">All</option>
            <option value="Pardoned">Pardoned</option>
            <option value="Not Pardoned">Not Pardoned</option>
        </select>
        <input class="btn btn-light" type="submit" onclick="sortByPardoned()" value="Search" />
    </p>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pardoned)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student.Grade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student.ClassNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Subject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Teacher)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pardoned)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.Grade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.ClassNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.ApplicationUser.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Subject.SubjectName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Teacher.ApplicationUser.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<form id="pageForm" asp-controller="Absences" asp-action="Index" method="get">
    <input id="secretSearchBar" class="d-none" type="text" name="SearchString" />
    @for (int i = 1; i < Math.Ceiling(Convert.ToDouble(ViewData["ItemCount"].ToString()) / int.Parse(ViewData["ITEMS_PER_PAGE"].ToString())) + 1; i++)
    {
        

        <input class="btn btn-light d-inline" type="submit" name="currentPage" value="@i" />
    }
</form>
<br>

@if (User.IsInRole("Teacher"))
{
    <a class="btn btn-light" asp-action="StudentsList">Add absence</a>
}
<script>
    window.onload = function () {
        const urlSearchParams = new URLSearchParams(window.location.search);
        let sortList = urlSearchParams.get('sortList');
        let searchBar = urlSearchParams.get('SearchString');
        if (sortList === null) {
            sortList = 'All';
        }
        document.forms['searchForm']['searchBar'].value = searchBar;
        document.forms['pageForm']['secretSearchBar'].value = searchBar;
    }
</script>
